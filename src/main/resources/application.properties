server.port=8081

server.address=192.168.7.82
#server.address=localhost

spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@localhost:1521:mldn
spring.datasource.username=c##rdy
spring.datasource.password=123456

#spring.redis.url=redis://localhost:6379

#java\u76EE\u5F55\u4E0Bxml\u6587\u4EF6\u4F4D\u7F6E\uFF08pom\u4E2D\u9700\u8981\u914D\u7F6Eresources\uFF09
mybatis.mapper-locations=classpath*:com/belle/springsecurityjwt/dao/mapper/*.xml
#resources\u76EE\u5F55\u4E0Bxml\u6587\u4EF6\u4F4D\u7F6E
#classpath:mapper/*.xml
mybatis.type-aliases-package=com.belle.springsecurityjwt.model.entity

#\u65E5\u5FD7
#logging.pattern.console="%d - %msg%n"
#\u8BBE\u7F6E\u6587\u4EF6\uFF0C\u53EF\u4EE5\u662F\u7EDD\u5BF9\u8DEF\u5F84\uFF0C\u4E5F\u53EF\u4EE5\u662F\u76F8\u5BF9\u8DEF\u5F84
logging.file=log/mySpringboot.log
#logging.file=D:/logs/springboot.log

#\u8BBE\u7F6E\u5305\u4E0B\u7684\u65E5\u5FD7\u7EA7\u522B
logging.level.com.belle.springsecurityjwt.controller:info

# \u521D\u59CB\u5316\u5927\u5C0F\uFF0C\u6700\u5C0F\uFF0C\u6700\u5927
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# \u914D\u7F6E\u83B7\u53D6\u8FDE\u63A5\u7B49\u5F85\u8D85\u65F6\u7684\u65F6\u95F4
spring.datasource.maxWait=60000
# \u914D\u7F6E\u95F4\u9694\u591A\u4E45\u624D\u8FDB\u884C\u4E00\u6B21\u68C0\u6D4B\uFF0C\u68C0\u6D4B\u9700\u8981\u5173\u95ED\u7684\u7A7A\u95F2\u8FDE\u63A5\uFF0C\u5355\u4F4D\u662F\u6BEB\u79D2
spring.datasource.timeBetweenEvictionRunsMillis=60000
# \u914D\u7F6E\u4E00\u4E2A\u8FDE\u63A5\u5728\u6C60\u4E2D\u6700\u5C0F\u751F\u5B58\u7684\u65F6\u95F4\uFF0C\u5355\u4F4D\u662F\u6BEB\u79D2
spring.datasource.minEvictableIdleTimeMillis=300000
# \u6821\u9A8CSQL\uFF0COracle\u914D\u7F6E spring.datasource.validationQuery=SELECT 1 FROM DUAL\uFF0C\u5982\u679C\u4E0D\u914DvalidationQuery\u9879\uFF0C\u5219\u4E0B\u9762\u4E09\u9879\u914D\u7F6E\u65E0\u7528
spring.datasource.validationQuery=SELECT 'x'
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# \u6253\u5F00PSCache\uFF0C\u5E76\u4E14\u6307\u5B9A\u6BCF\u4E2A\u8FDE\u63A5\u4E0APSCache\u7684\u5927\u5C0F
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# \u914D\u7F6E\u76D1\u63A7\u7EDF\u8BA1\u62E6\u622A\u7684filters\uFF0C\u53BB\u6389\u540E\u76D1\u63A7\u754C\u9762sql\u65E0\u6CD5\u7EDF\u8BA1\uFF0C'wall'\u7528\u4E8E\u9632\u706B\u5899
spring.datasource.filters=stat,wall,log4j
# \u901A\u8FC7connectProperties\u5C5E\u6027\u6765\u6253\u5F00mergeSql\u529F\u80FD\uFF1B\u6162SQL\u8BB0\u5F55
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# \u5408\u5E76\u591A\u4E2ADruidDataSource\u7684\u76D1\u63A7\u6570\u636E
spring.datasource.useGlobalDataSourceStat=true